{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","count","addPlayer","name","setState","prevState","players","concat","score","id","removePlayer","filter","p","changeScore","index","delta","updatedPlayers","updatedPlayer","getHighScore","scores","state","map","highScore","Math","max","this","className","title","player","isHighScore","toString","Component","Header","defaultProps","Stats","totalPlayers","length","totalPoints","reduce","total","Timer","tick","isRunning","now","Date","previousTime","elapsedTime","handleRunning","handleReset","intervals","setInterval","clearInterval","seconds","floor","onClick","Player","props","PureComponent","Counter","Icon","xmlns","width","height","fill","viewBox","d","AddPlayerForm","handleValueChange","evt","value","target","handleSubmit","preventDefault","onSubmit","type","onChange","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAIMA,E,kDACJ,aAAe,IAAD,8BACZ,gBASFC,MAAQ,EAVM,EAYdC,UAAY,SAACC,GACX,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BC,QAASD,EAAUC,QAAQC,OAAO,CAChCJ,KAAMA,EACNK,MAAO,EACPC,GAAK,EAAKR,OAAS,SAjBX,EAsBdS,aAAe,SAACD,GACd,EAAKL,UAAS,SAACC,GAAD,MAAgB,CAC5BC,QAASD,EAAUC,QAAQK,QAAO,SAACC,GAAD,OAAOA,EAAEH,KAAOA,UAxBxC,EA4BdI,YAAc,SAACC,EAAOC,GACpB,EAAKX,UAAS,SAACC,GACb,IAAMW,EAAc,YAAOX,EAAUC,SAC/BW,EAAa,eAAQD,EAAeF,IAK1C,OAHAG,EAAcT,OAASO,EACvBC,EAAeF,GAASG,EAEjB,CAAEX,QAASU,OApCR,EAwCdE,aAAe,WACb,IAAMC,EAAS,EAAKC,MAAMd,QAAQe,KAAI,SAACT,GAAD,OAAOA,EAAEJ,SACzCc,EAAYC,KAAKC,IAAL,MAAAD,KAAI,YAAQJ,IAC9B,OAAIG,GAGK,MA5CT,EAAKF,MAAQ,CACXd,QAAS,CACP,CAAEH,KAAM,WAAYM,GAAI,EAAGD,MAAO,GAClC,CAAEL,KAAM,WAAYM,GAAI,EAAGD,MAAO,KAL1B,E,0CAkDd,WAAU,IAAD,OACDc,EAAYG,KAAKP,eAEvB,OACE,sBAAKQ,UAAU,aAAf,UACE,cAAC,EAAD,CAAQC,MAAM,aAAarB,QAASmB,KAAKL,MAAMd,UAE9CmB,KAAKL,MAAMd,QAAQe,KAAI,SAACO,EAAQd,GAAT,OACtB,cAAC,EAAD,CACEX,KAAMyB,EAAOzB,KACbM,GAAImB,EAAOnB,GAEXK,MAAOA,EACPN,MAAOoB,EAAOpB,MACdE,aAAc,EAAKA,aACnBG,YAAa,EAAKA,YAClBgB,YAAaP,IAAcM,EAAOpB,OAL7BoB,EAAOnB,GAAGqB,eAQnB,cAAC,EAAD,CAAe5B,UAAWuB,KAAKvB,mB,GAtErB6B,aA4EZC,EAAS,SAAC,GAAwB,IAAtB1B,EAAqB,EAArBA,QAASqB,EAAY,EAAZA,MACzB,OACE,mCACE,cAAC,EAAD,CAAOrB,QAASA,IAChB,6BAAKqB,IACL,cAAC,EAAD,QAUNK,EAAOC,aAAe,CACpBN,MAAO,cAGT,IAAMO,EAAQ,SAAC,GAAiB,IAAf5B,EAAc,EAAdA,QACT6B,EAAe7B,EAAQ8B,OACvBC,EAAc/B,EAAQgC,QAAO,SAACC,EAAOX,GACzC,OAAOW,EAAQX,EAAOpB,QACrB,GAEH,OACE,uBAAOkB,UAAU,QAAjB,SACE,kCACE,+BACE,0CACA,6BAAKS,OAEP,+BACE,yCACA,6BAAKE,aAeTG,E,kDACJ,aAAe,IAAD,8BACZ,gBAgBFC,KAAO,WACL,GAAI,EAAKrB,MAAMsB,UAAW,CACxB,IAAMC,EAAMC,KAAKD,MACjB,EAAKvC,UAAS,SAACC,GAAD,MAAgB,CAC5BwC,aAAcF,EACdG,YAAazC,EAAUyC,aAAeH,EAAM,EAAKvB,MAAMyB,oBAtB/C,EA2BdE,cAAgB,WACd,EAAK3C,UAAS,SAACC,GAAD,MAAgB,CAAEqC,WAAYrC,EAAUqC,cACjD,EAAKtB,MAAMsB,WACd,EAAKtC,SAAS,CAAEyC,aAAcD,KAAKD,SA9BzB,EAkCdK,YAAc,WACZ,EAAK5C,SAAS,CAAE0C,YAAa,KAjC7B,EAAK1B,MAAQ,CACXsB,WAAW,EACXG,aAAc,EACdC,YAAa,GALH,E,qDASd,WAAqB,IAAD,OAClBrB,KAAKwB,UAAYC,aAAY,kBAAM,EAAKT,SAAQ,O,kCAGlD,WACEU,cAAc1B,KAAKwB,a,oBAwBrB,WACE,IAAMG,EAAU7B,KAAK8B,MAAM5B,KAAKL,MAAM0B,YAAc,KACpD,OACE,sBAAKpB,UAAU,QAAf,UACE,sBAAMA,UAAU,UAAhB,SAA2B0B,IAC3B,sBAAK1B,UAAU,gBAAf,UACE,wBAAQ4B,QAAS7B,KAAKsB,cAAtB,SACGtB,KAAKL,MAAMsB,UAAY,OAAS,UAEnC,wBAAQY,QAAS7B,KAAKuB,YAAtB,6B,GAhDUjB,aAuDdwB,E,4JAUJ,WAAU,IAAD,EASH9B,KAAK+B,MAPPrD,EAFK,EAELA,KACAM,EAHK,EAGLA,GACAD,EAJK,EAILA,MACAM,EALK,EAKLA,MACAJ,EANK,EAMLA,aACAG,EAPK,EAOLA,YACAgB,EARK,EAQLA,YAEF,OACE,sBAAKH,UAAU,SAAf,UACE,uBAAMA,UAAU,cAAhB,UACE,wBAAQA,UAAU,gBAAgB4B,QAAS,kBAAM5C,EAAaD,IAA9D,eAGA,cAAC,EAAD,CAAMoB,YAAaA,OAErB,mBAAGH,UAAU,cAAb,SAA4BvB,IAC5B,cAAC,EAAD,CAASW,MAAOA,EAAON,MAAOA,EAAOK,YAAaA,W,GA7BrC4C,iBAmCfC,EAAU,SAAC,GAAmC,IAAjC5C,EAAgC,EAAhCA,MAAON,EAAyB,EAAzBA,MAAOK,EAAkB,EAAlBA,YAC/B,OACE,sBAAKa,UAAU,UAAf,UACE,yBACEA,UAAU,2BACV4B,QAAS,kBAAMzC,EAAYC,GAAQ,IAFrC,UAIG,IAJH,IAKI,OAEJ,sBAAMY,UAAU,gBAAhB,SAAiClB,IACjC,yBACEkB,UAAU,2BACV4B,QAAS,kBAAMzC,EAAYC,EAAO,IAFpC,UAIG,IAJH,IAKI,WAYJ6C,EAAO,SAAC,GACZ,OADgC,EAAlB9B,YAGV,qBACE+B,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLrC,UAAU,kBACVsC,QAAQ,YANV,SAQE,sBAAMC,EAAE,iQAKV,qBACEL,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLrC,UAAU,aACVsC,QAAQ,YANV,SAQE,sBAAMC,EAAE,0fAQVC,E,kDACJ,aAAe,IAAD,8BACZ,gBAIFC,kBAAoB,SAACC,GACnB,EAAKhE,SAAS,CAAEiE,MAAOD,EAAIE,OAAOD,SANtB,EASdE,aAAe,SAACH,GACdA,EAAII,iBACJ,EAAKhB,MAAMtD,UAAU,EAAKkB,MAAMiD,OAChC,EAAKjE,SAAS,CAAEiE,MAAO,MAVvB,EAAKjD,MAAQ,CAAEiD,MAAO,IAFV,E,0CAed,WACE,OACE,uBAAMI,SAAUhD,KAAK8C,aAArB,UACE,uBACE7C,UAAU,aACVgD,KAAK,OACLL,MAAO5C,KAAKL,MAAMiD,MAClBM,SAAUlD,KAAK0C,kBACfS,YAAY,0BAEd,uBAAOlD,UAAU,cAAcgD,KAAK,SAASL,MAAM,sB,GA1B/BtC,aAgCb/B,IC3SA6E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7e483536.chunk.js","sourcesContent":["import React, { Component, PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      players: [\n        { name: 'Player 1', id: 1, score: 0 },\n        { name: 'Player 2', id: 2, score: 0 },\n      ],\n    };\n  }\n\n  count = 2;\n\n  addPlayer = (name) => {\n    this.setState((prevState) => ({\n      players: prevState.players.concat({\n        name: name,\n        score: 0,\n        id: (this.count += 1),\n      }),\n    }));\n  };\n\n  removePlayer = (id) => {\n    this.setState((prevState) => ({\n      players: prevState.players.filter((p) => p.id !== id),\n    }));\n  };\n\n  changeScore = (index, delta) => {\n    this.setState((prevState) => {\n      const updatedPlayers = [...prevState.players];\n      const updatedPlayer = { ...updatedPlayers[index] };\n\n      updatedPlayer.score += delta;\n      updatedPlayers[index] = updatedPlayer;\n\n      return { players: updatedPlayers };\n    });\n  };\n\n  getHighScore = () => {\n    const scores = this.state.players.map((p) => p.score);\n    const highScore = Math.max(...scores);\n    if (highScore) {\n      return highScore;\n    } else {\n      return null;\n    }\n  };\n\n  render() {\n    const highScore = this.getHighScore();\n\n    return (\n      <div className=\"scoreboard\">\n        <Header title=\"Scoreboard\" players={this.state.players} />\n        {/* Players list */}\n        {this.state.players.map((player, index) => (\n          <Player\n            name={player.name}\n            id={player.id}\n            key={player.id.toString()}\n            index={index}\n            score={player.score}\n            removePlayer={this.removePlayer}\n            changeScore={this.changeScore}\n            isHighScore={highScore === player.score}\n          />\n        ))}\n        <AddPlayerForm addPlayer={this.addPlayer} />\n      </div>\n    );\n  }\n}\n\nconst Header = ({ players, title }) => {\n  return (\n    <header>\n      <Stats players={players} />\n      <h1>{title}</h1>\n      <Timer />\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  players: PropTypes.arrayOf(PropTypes.object),\n};\n\nHeader.defaultProps = {\n  title: 'Scoreboard',\n};\n\nconst Stats = ({ players }) => {\n  const totalPlayers = players.length;\n  const totalPoints = players.reduce((total, player) => {\n    return total + player.score;\n  }, 0);\n\n  return (\n    <table className=\"stats\">\n      <tbody>\n        <tr>\n          <td>Players:</td>\n          <td>{totalPlayers}</td>\n        </tr>\n        <tr>\n          <td>Points:</td>\n          <td>{totalPoints}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nStats.propTypes = {\n  players: PropTypes.arrayOf(\n    PropTypes.shape({\n      score: PropTypes.number,\n    })\n  ),\n};\n\nclass Timer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isRunning: false,\n      previousTime: 0,\n      elapsedTime: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.intervals = setInterval(() => this.tick(), 100);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervals);\n  }\n\n  tick = () => {\n    if (this.state.isRunning) {\n      const now = Date.now();\n      this.setState((prevState) => ({\n        previousTime: now,\n        elapsedTime: prevState.elapsedTime + (now - this.state.previousTime),\n      }));\n    }\n  };\n\n  handleRunning = () => {\n    this.setState((prevState) => ({ isRunning: !prevState.isRunning }));\n    if (!this.state.isRunning) {\n      this.setState({ previousTime: Date.now() });\n    }\n  };\n\n  handleReset = () => {\n    this.setState({ elapsedTime: 0 });\n  };\n\n  render() {\n    const seconds = Math.floor(this.state.elapsedTime / 1000);\n    return (\n      <div className=\"timer\">\n        <span className=\"seconds\">{seconds}</span>\n        <div className=\"timer-buttons\">\n          <button onClick={this.handleRunning}>\n            {this.state.isRunning ? 'stop' : 'start'}\n          </button>\n          <button onClick={this.handleReset}>Reset</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Player extends PureComponent {\n  static propTypes = {\n    changeScore: PropTypes.func,\n    removePlayer: PropTypes.func,\n    name: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n    id: PropTypes.number,\n    index: PropTypes.number,\n  };\n\n  render() {\n    const {\n      name,\n      id,\n      score,\n      index,\n      removePlayer,\n      changeScore,\n      isHighScore,\n    } = this.props;\n    return (\n      <div className=\"player\">\n        <span className=\"player-icon\">\n          <button className=\"remove-player\" onClick={() => removePlayer(id)}>\n            x\n          </button>\n          <Icon isHighScore={isHighScore} />\n        </span>\n        <p className=\"player-name\">{name}</p>\n        <Counter index={index} score={score} changeScore={changeScore} />\n      </div>\n    );\n  }\n}\n\nconst Counter = ({ index, score, changeScore }) => {\n  return (\n    <div className=\"counter\">\n      <button\n        className=\"counter-action decrement\"\n        onClick={() => changeScore(index, -1)}\n      >\n        {' '}\n        -{' '}\n      </button>\n      <span className=\"counter-score\">{score}</span>\n      <button\n        className=\"counter-action increment\"\n        onClick={() => changeScore(index, +1)}\n      >\n        {' '}\n        +{' '}\n      </button>\n    </div>\n  );\n};\n\nCounter.propTypes = {\n  index: PropTypes.number,\n  score: PropTypes.number,\n  changeScore: PropTypes.func,\n};\n\nconst Icon = ({ isHighScore }) => {\n  if (isHighScore) {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"currentColor\"\n        className=\"bi bi-star-fill\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\" />\n      </svg>\n    );\n  } else {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"currentColor\"\n        className=\"bi bi-star\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.523-3.356c.329-.314.158-.888-.283-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767l-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288l1.847-3.658 1.846 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.564.564 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z\" />\n      </svg>\n    );\n  }\n};\n\nIcon.propTypes = { isHighScore: PropTypes.bool };\n\nclass AddPlayerForm extends Component {\n  constructor() {\n    super();\n    this.state = { value: '' };\n  }\n\n  handleValueChange = (evt) => {\n    this.setState({ value: evt.target.value });\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    this.props.addPlayer(this.state.value);\n    this.setState({ value: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          className=\"form-input\"\n          type=\"text\"\n          value={this.state.value}\n          onChange={this.handleValueChange}\n          placeholder=\"Enter a player's name\"\n        />\n        <input className=\"form-submit\" type=\"submit\" value=\"Add Player\" />\n      </form>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}